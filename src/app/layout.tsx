import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ReactQueryProvider from "./GlobalSetup/ReactQuery/ReactQuryProviders";
import ReduxProvider from "./GlobalSetup/Redux/ReduxProvider";
import { OrderProvider } from "./context/order/OrdersContext";
import { UserInfoContextProvider } from "./context/users/userInfoContext";
import { GlobalContextProvider } from "./context/Global/GlobalContext";
import { Toaster } from "react-hot-toast";
import { CartContextProvider } from "./context/cart/CartContext";
import CustomeNotification from "./components/Notification";
import { ApolloProvider } from "@apollo/client";
// import { client } from "./GlobalSetup/GraphQl/apollo-client";
// import { OrderProvider } from "./context/order/order"; // Ensure this path is correct

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });
// ${geistSans.variable} ${geistMono.variable}

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={` relative overflow-x-hidden antialiased`}
      >
        {/* <ReduxProvider > */}
        {/* <ApolloProvider client={client}> */}
          <OrderProvider>
            <GlobalContextProvider>
              <CartContextProvider>
                <UserInfoContextProvider>
                  <ReactQueryProvider>
                    <Toaster position="top-center" toastOptions={{ duration: 3000 }} />
                    {children}
                    <CustomeNotification/>
                  </ReactQueryProvider>
                </UserInfoContextProvider>
              </CartContextProvider>
            </GlobalContextProvider>
          </OrderProvider>
        {/* </ApolloProvider > */}
        {/* </ReduxProvider> */}
      </body>
    </html>
  );
}
